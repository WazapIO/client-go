/*
WhatsAPI Go

The V2 of WhatsAPI Go

API version: 2.0
Contact: manjit@sponsorbook.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package WhatsAPI

import (
	"encoding/json"
)

// ListSection struct for ListSection
type ListSection struct {
	Rows []ListItem `json:"rows"`
	Title string `json:"title"`
}

// NewListSection instantiates a new ListSection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSection(rows []ListItem, title string) *ListSection {
	this := ListSection{}
	this.Rows = rows
	this.Title = title
	return &this
}

// NewListSectionWithDefaults instantiates a new ListSection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSectionWithDefaults() *ListSection {
	this := ListSection{}
	return &this
}

// GetRows returns the Rows field value
func (o *ListSection) GetRows() []ListItem {
	if o == nil {
		var ret []ListItem
		return ret
	}

	return o.Rows
}

// GetRowsOk returns a tuple with the Rows field value
// and a boolean to check if the value has been set.
func (o *ListSection) GetRowsOk() ([]ListItem, bool) {
	if o == nil {
    return nil, false
	}
	return o.Rows, true
}

// SetRows sets field value
func (o *ListSection) SetRows(v []ListItem) {
	o.Rows = v
}

// GetTitle returns the Title field value
func (o *ListSection) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ListSection) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ListSection) SetTitle(v string) {
	o.Title = v
}

func (o ListSection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rows"] = o.Rows
	}
	if true {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableListSection struct {
	value *ListSection
	isSet bool
}

func (v NullableListSection) Get() *ListSection {
	return v.value
}

func (v *NullableListSection) Set(val *ListSection) {
	v.value = val
	v.isSet = true
}

func (v NullableListSection) IsSet() bool {
	return v.isSet
}

func (v *NullableListSection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSection(val *ListSection) *NullableListSection {
	return &NullableListSection{value: val, isSet: true}
}

func (v NullableListSection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


