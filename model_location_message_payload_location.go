/*
WhatsAPI Go

The V2 of WhatsAPI Go

API version: 2.0
Contact: manjit@sponsorbook.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package WhatsAPI

import (
	"encoding/json"
)

// LocationMessagePayloadLocation struct for LocationMessagePayloadLocation
type LocationMessagePayloadLocation struct {
	Address *string `json:"address,omitempty"`
	Latitude float32 `json:"latitude"`
	Longitude float32 `json:"longitude"`
	Name string `json:"name"`
}

// NewLocationMessagePayloadLocation instantiates a new LocationMessagePayloadLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationMessagePayloadLocation(latitude float32, longitude float32, name string) *LocationMessagePayloadLocation {
	this := LocationMessagePayloadLocation{}
	this.Latitude = latitude
	this.Longitude = longitude
	this.Name = name
	return &this
}

// NewLocationMessagePayloadLocationWithDefaults instantiates a new LocationMessagePayloadLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationMessagePayloadLocationWithDefaults() *LocationMessagePayloadLocation {
	this := LocationMessagePayloadLocation{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *LocationMessagePayloadLocation) GetAddress() string {
	if o == nil || isNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationMessagePayloadLocation) GetAddressOk() (*string, bool) {
	if o == nil || isNil(o.Address) {
    return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *LocationMessagePayloadLocation) HasAddress() bool {
	if o != nil && !isNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *LocationMessagePayloadLocation) SetAddress(v string) {
	o.Address = &v
}

// GetLatitude returns the Latitude field value
func (o *LocationMessagePayloadLocation) GetLatitude() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value
// and a boolean to check if the value has been set.
func (o *LocationMessagePayloadLocation) GetLatitudeOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Latitude, true
}

// SetLatitude sets field value
func (o *LocationMessagePayloadLocation) SetLatitude(v float32) {
	o.Latitude = v
}

// GetLongitude returns the Longitude field value
func (o *LocationMessagePayloadLocation) GetLongitude() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value
// and a boolean to check if the value has been set.
func (o *LocationMessagePayloadLocation) GetLongitudeOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Longitude, true
}

// SetLongitude sets field value
func (o *LocationMessagePayloadLocation) SetLongitude(v float32) {
	o.Longitude = v
}

// GetName returns the Name field value
func (o *LocationMessagePayloadLocation) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LocationMessagePayloadLocation) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LocationMessagePayloadLocation) SetName(v string) {
	o.Name = v
}

func (o LocationMessagePayloadLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["latitude"] = o.Latitude
	}
	if true {
		toSerialize["longitude"] = o.Longitude
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableLocationMessagePayloadLocation struct {
	value *LocationMessagePayloadLocation
	isSet bool
}

func (v NullableLocationMessagePayloadLocation) Get() *LocationMessagePayloadLocation {
	return v.value
}

func (v *NullableLocationMessagePayloadLocation) Set(val *LocationMessagePayloadLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationMessagePayloadLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationMessagePayloadLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationMessagePayloadLocation(val *LocationMessagePayloadLocation) *NullableLocationMessagePayloadLocation {
	return &NullableLocationMessagePayloadLocation{value: val, isSet: true}
}

func (v NullableLocationMessagePayloadLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationMessagePayloadLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


