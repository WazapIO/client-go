/*
WhatsAPI Go

The V2 of WhatsAPI Go

API version: 2.0
Contact: manjit@sponsorbook.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whatsapi

import (
	"encoding/json"
)

// StructsButtonMessagePayload struct for StructsButtonMessagePayload
type StructsButtonMessagePayload struct {
	Buttons []StructsReplyButton `json:"buttons,omitempty"`
	FooterText *string `json:"footer_text,omitempty"`
	HeaderText *string `json:"header_text,omitempty"`
	Text *string `json:"text,omitempty"`
	To *string `json:"to,omitempty"`
}

// NewStructsButtonMessagePayload instantiates a new StructsButtonMessagePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructsButtonMessagePayload() *StructsButtonMessagePayload {
	this := StructsButtonMessagePayload{}
	return &this
}

// NewStructsButtonMessagePayloadWithDefaults instantiates a new StructsButtonMessagePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructsButtonMessagePayloadWithDefaults() *StructsButtonMessagePayload {
	this := StructsButtonMessagePayload{}
	return &this
}

// GetButtons returns the Buttons field value if set, zero value otherwise.
func (o *StructsButtonMessagePayload) GetButtons() []StructsReplyButton {
	if o == nil || isNil(o.Buttons) {
		var ret []StructsReplyButton
		return ret
	}
	return o.Buttons
}

// GetButtonsOk returns a tuple with the Buttons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsButtonMessagePayload) GetButtonsOk() ([]StructsReplyButton, bool) {
	if o == nil || isNil(o.Buttons) {
    return nil, false
	}
	return o.Buttons, true
}

// HasButtons returns a boolean if a field has been set.
func (o *StructsButtonMessagePayload) HasButtons() bool {
	if o != nil && !isNil(o.Buttons) {
		return true
	}

	return false
}

// SetButtons gets a reference to the given []StructsReplyButton and assigns it to the Buttons field.
func (o *StructsButtonMessagePayload) SetButtons(v []StructsReplyButton) {
	o.Buttons = v
}

// GetFooterText returns the FooterText field value if set, zero value otherwise.
func (o *StructsButtonMessagePayload) GetFooterText() string {
	if o == nil || isNil(o.FooterText) {
		var ret string
		return ret
	}
	return *o.FooterText
}

// GetFooterTextOk returns a tuple with the FooterText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsButtonMessagePayload) GetFooterTextOk() (*string, bool) {
	if o == nil || isNil(o.FooterText) {
    return nil, false
	}
	return o.FooterText, true
}

// HasFooterText returns a boolean if a field has been set.
func (o *StructsButtonMessagePayload) HasFooterText() bool {
	if o != nil && !isNil(o.FooterText) {
		return true
	}

	return false
}

// SetFooterText gets a reference to the given string and assigns it to the FooterText field.
func (o *StructsButtonMessagePayload) SetFooterText(v string) {
	o.FooterText = &v
}

// GetHeaderText returns the HeaderText field value if set, zero value otherwise.
func (o *StructsButtonMessagePayload) GetHeaderText() string {
	if o == nil || isNil(o.HeaderText) {
		var ret string
		return ret
	}
	return *o.HeaderText
}

// GetHeaderTextOk returns a tuple with the HeaderText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsButtonMessagePayload) GetHeaderTextOk() (*string, bool) {
	if o == nil || isNil(o.HeaderText) {
    return nil, false
	}
	return o.HeaderText, true
}

// HasHeaderText returns a boolean if a field has been set.
func (o *StructsButtonMessagePayload) HasHeaderText() bool {
	if o != nil && !isNil(o.HeaderText) {
		return true
	}

	return false
}

// SetHeaderText gets a reference to the given string and assigns it to the HeaderText field.
func (o *StructsButtonMessagePayload) SetHeaderText(v string) {
	o.HeaderText = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *StructsButtonMessagePayload) GetText() string {
	if o == nil || isNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsButtonMessagePayload) GetTextOk() (*string, bool) {
	if o == nil || isNil(o.Text) {
    return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *StructsButtonMessagePayload) HasText() bool {
	if o != nil && !isNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *StructsButtonMessagePayload) SetText(v string) {
	o.Text = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *StructsButtonMessagePayload) GetTo() string {
	if o == nil || isNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsButtonMessagePayload) GetToOk() (*string, bool) {
	if o == nil || isNil(o.To) {
    return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *StructsButtonMessagePayload) HasTo() bool {
	if o != nil && !isNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *StructsButtonMessagePayload) SetTo(v string) {
	o.To = &v
}

func (o StructsButtonMessagePayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Buttons) {
		toSerialize["buttons"] = o.Buttons
	}
	if !isNil(o.FooterText) {
		toSerialize["footer_text"] = o.FooterText
	}
	if !isNil(o.HeaderText) {
		toSerialize["header_text"] = o.HeaderText
	}
	if !isNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !isNil(o.To) {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableStructsButtonMessagePayload struct {
	value *StructsButtonMessagePayload
	isSet bool
}

func (v NullableStructsButtonMessagePayload) Get() *StructsButtonMessagePayload {
	return v.value
}

func (v *NullableStructsButtonMessagePayload) Set(val *StructsButtonMessagePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableStructsButtonMessagePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableStructsButtonMessagePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructsButtonMessagePayload(val *StructsButtonMessagePayload) *NullableStructsButtonMessagePayload {
	return &NullableStructsButtonMessagePayload{value: val, isSet: true}
}

func (v NullableStructsButtonMessagePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructsButtonMessagePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


