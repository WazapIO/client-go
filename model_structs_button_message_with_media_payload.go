/*
WhatsAPI Go

The V2 of WhatsAPI Go

API version: 2.0
Contact: manjit@sponsorbook.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whatsapi

import (
	"encoding/json"
)

// StructsButtonMessageWithMediaPayload struct for StructsButtonMessageWithMediaPayload
type StructsButtonMessageWithMediaPayload struct {
	Buttons []StructsReplyButton `json:"buttons,omitempty"`
	FooterText *string `json:"footer_text,omitempty"`
	MediaData *StructsFileUpload `json:"media_data,omitempty"`
	Text *string `json:"text,omitempty"`
	To *string `json:"to,omitempty"`
}

// NewStructsButtonMessageWithMediaPayload instantiates a new StructsButtonMessageWithMediaPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructsButtonMessageWithMediaPayload() *StructsButtonMessageWithMediaPayload {
	this := StructsButtonMessageWithMediaPayload{}
	return &this
}

// NewStructsButtonMessageWithMediaPayloadWithDefaults instantiates a new StructsButtonMessageWithMediaPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructsButtonMessageWithMediaPayloadWithDefaults() *StructsButtonMessageWithMediaPayload {
	this := StructsButtonMessageWithMediaPayload{}
	return &this
}

// GetButtons returns the Buttons field value if set, zero value otherwise.
func (o *StructsButtonMessageWithMediaPayload) GetButtons() []StructsReplyButton {
	if o == nil || isNil(o.Buttons) {
		var ret []StructsReplyButton
		return ret
	}
	return o.Buttons
}

// GetButtonsOk returns a tuple with the Buttons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsButtonMessageWithMediaPayload) GetButtonsOk() ([]StructsReplyButton, bool) {
	if o == nil || isNil(o.Buttons) {
    return nil, false
	}
	return o.Buttons, true
}

// HasButtons returns a boolean if a field has been set.
func (o *StructsButtonMessageWithMediaPayload) HasButtons() bool {
	if o != nil && !isNil(o.Buttons) {
		return true
	}

	return false
}

// SetButtons gets a reference to the given []StructsReplyButton and assigns it to the Buttons field.
func (o *StructsButtonMessageWithMediaPayload) SetButtons(v []StructsReplyButton) {
	o.Buttons = v
}

// GetFooterText returns the FooterText field value if set, zero value otherwise.
func (o *StructsButtonMessageWithMediaPayload) GetFooterText() string {
	if o == nil || isNil(o.FooterText) {
		var ret string
		return ret
	}
	return *o.FooterText
}

// GetFooterTextOk returns a tuple with the FooterText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsButtonMessageWithMediaPayload) GetFooterTextOk() (*string, bool) {
	if o == nil || isNil(o.FooterText) {
    return nil, false
	}
	return o.FooterText, true
}

// HasFooterText returns a boolean if a field has been set.
func (o *StructsButtonMessageWithMediaPayload) HasFooterText() bool {
	if o != nil && !isNil(o.FooterText) {
		return true
	}

	return false
}

// SetFooterText gets a reference to the given string and assigns it to the FooterText field.
func (o *StructsButtonMessageWithMediaPayload) SetFooterText(v string) {
	o.FooterText = &v
}

// GetMediaData returns the MediaData field value if set, zero value otherwise.
func (o *StructsButtonMessageWithMediaPayload) GetMediaData() StructsFileUpload {
	if o == nil || isNil(o.MediaData) {
		var ret StructsFileUpload
		return ret
	}
	return *o.MediaData
}

// GetMediaDataOk returns a tuple with the MediaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsButtonMessageWithMediaPayload) GetMediaDataOk() (*StructsFileUpload, bool) {
	if o == nil || isNil(o.MediaData) {
    return nil, false
	}
	return o.MediaData, true
}

// HasMediaData returns a boolean if a field has been set.
func (o *StructsButtonMessageWithMediaPayload) HasMediaData() bool {
	if o != nil && !isNil(o.MediaData) {
		return true
	}

	return false
}

// SetMediaData gets a reference to the given StructsFileUpload and assigns it to the MediaData field.
func (o *StructsButtonMessageWithMediaPayload) SetMediaData(v StructsFileUpload) {
	o.MediaData = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *StructsButtonMessageWithMediaPayload) GetText() string {
	if o == nil || isNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsButtonMessageWithMediaPayload) GetTextOk() (*string, bool) {
	if o == nil || isNil(o.Text) {
    return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *StructsButtonMessageWithMediaPayload) HasText() bool {
	if o != nil && !isNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *StructsButtonMessageWithMediaPayload) SetText(v string) {
	o.Text = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *StructsButtonMessageWithMediaPayload) GetTo() string {
	if o == nil || isNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsButtonMessageWithMediaPayload) GetToOk() (*string, bool) {
	if o == nil || isNil(o.To) {
    return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *StructsButtonMessageWithMediaPayload) HasTo() bool {
	if o != nil && !isNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *StructsButtonMessageWithMediaPayload) SetTo(v string) {
	o.To = &v
}

func (o StructsButtonMessageWithMediaPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Buttons) {
		toSerialize["buttons"] = o.Buttons
	}
	if !isNil(o.FooterText) {
		toSerialize["footer_text"] = o.FooterText
	}
	if !isNil(o.MediaData) {
		toSerialize["media_data"] = o.MediaData
	}
	if !isNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !isNil(o.To) {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableStructsButtonMessageWithMediaPayload struct {
	value *StructsButtonMessageWithMediaPayload
	isSet bool
}

func (v NullableStructsButtonMessageWithMediaPayload) Get() *StructsButtonMessageWithMediaPayload {
	return v.value
}

func (v *NullableStructsButtonMessageWithMediaPayload) Set(val *StructsButtonMessageWithMediaPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableStructsButtonMessageWithMediaPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableStructsButtonMessageWithMediaPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructsButtonMessageWithMediaPayload(val *StructsButtonMessageWithMediaPayload) *NullableStructsButtonMessageWithMediaPayload {
	return &NullableStructsButtonMessageWithMediaPayload{value: val, isSet: true}
}

func (v NullableStructsButtonMessageWithMediaPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructsButtonMessageWithMediaPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


