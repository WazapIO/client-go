/*
WhatsAPI Go

The V2 of WhatsAPI Go

API version: 2.0
Contact: manjit@sponsorbook.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package com.whatsapi

import (
	"encoding/json"
)

// StructsSendMediaPayload struct for StructsSendMediaPayload
type StructsSendMediaPayload struct {
	Caption *string `json:"caption,omitempty"`
	Filename *string `json:"filename,omitempty"`
	MediaData StructsFileUpload `json:"media_data"`
	MediaType string `json:"media_type"`
	To string `json:"to"`
}

// NewStructsSendMediaPayload instantiates a new StructsSendMediaPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructsSendMediaPayload(mediaData StructsFileUpload, mediaType string, to string) *StructsSendMediaPayload {
	this := StructsSendMediaPayload{}
	this.MediaData = mediaData
	this.MediaType = mediaType
	this.To = to
	return &this
}

// NewStructsSendMediaPayloadWithDefaults instantiates a new StructsSendMediaPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructsSendMediaPayloadWithDefaults() *StructsSendMediaPayload {
	this := StructsSendMediaPayload{}
	return &this
}

// GetCaption returns the Caption field value if set, zero value otherwise.
func (o *StructsSendMediaPayload) GetCaption() string {
	if o == nil || isNil(o.Caption) {
		var ret string
		return ret
	}
	return *o.Caption
}

// GetCaptionOk returns a tuple with the Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsSendMediaPayload) GetCaptionOk() (*string, bool) {
	if o == nil || isNil(o.Caption) {
    return nil, false
	}
	return o.Caption, true
}

// HasCaption returns a boolean if a field has been set.
func (o *StructsSendMediaPayload) HasCaption() bool {
	if o != nil && !isNil(o.Caption) {
		return true
	}

	return false
}

// SetCaption gets a reference to the given string and assigns it to the Caption field.
func (o *StructsSendMediaPayload) SetCaption(v string) {
	o.Caption = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *StructsSendMediaPayload) GetFilename() string {
	if o == nil || isNil(o.Filename) {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsSendMediaPayload) GetFilenameOk() (*string, bool) {
	if o == nil || isNil(o.Filename) {
    return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *StructsSendMediaPayload) HasFilename() bool {
	if o != nil && !isNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *StructsSendMediaPayload) SetFilename(v string) {
	o.Filename = &v
}

// GetMediaData returns the MediaData field value
func (o *StructsSendMediaPayload) GetMediaData() StructsFileUpload {
	if o == nil {
		var ret StructsFileUpload
		return ret
	}

	return o.MediaData
}

// GetMediaDataOk returns a tuple with the MediaData field value
// and a boolean to check if the value has been set.
func (o *StructsSendMediaPayload) GetMediaDataOk() (*StructsFileUpload, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MediaData, true
}

// SetMediaData sets field value
func (o *StructsSendMediaPayload) SetMediaData(v StructsFileUpload) {
	o.MediaData = v
}

// GetMediaType returns the MediaType field value
func (o *StructsSendMediaPayload) GetMediaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value
// and a boolean to check if the value has been set.
func (o *StructsSendMediaPayload) GetMediaTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MediaType, true
}

// SetMediaType sets field value
func (o *StructsSendMediaPayload) SetMediaType(v string) {
	o.MediaType = v
}

// GetTo returns the To field value
func (o *StructsSendMediaPayload) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *StructsSendMediaPayload) GetToOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *StructsSendMediaPayload) SetTo(v string) {
	o.To = v
}

func (o StructsSendMediaPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Caption) {
		toSerialize["caption"] = o.Caption
	}
	if !isNil(o.Filename) {
		toSerialize["filename"] = o.Filename
	}
	if true {
		toSerialize["media_data"] = o.MediaData
	}
	if true {
		toSerialize["media_type"] = o.MediaType
	}
	if true {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableStructsSendMediaPayload struct {
	value *StructsSendMediaPayload
	isSet bool
}

func (v NullableStructsSendMediaPayload) Get() *StructsSendMediaPayload {
	return v.value
}

func (v *NullableStructsSendMediaPayload) Set(val *StructsSendMediaPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableStructsSendMediaPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableStructsSendMediaPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructsSendMediaPayload(val *StructsSendMediaPayload) *NullableStructsSendMediaPayload {
	return &NullableStructsSendMediaPayload{value: val, isSet: true}
}

func (v NullableStructsSendMediaPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructsSendMediaPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


