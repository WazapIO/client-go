/*
WhatsAPI Go

The V2 of WhatsAPI Go

API version: 2.0
Contact: manjit@sponsorbook.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package WhatsAPI

import (
	"encoding/json"
)

// StructsTemplateButtonPayload struct for StructsTemplateButtonPayload
type StructsTemplateButtonPayload struct {
	Buttons []StructsTemplateButton `json:"buttons"`
	ContentText *string `json:"content_text,omitempty"`
	Footer *string `json:"footer,omitempty"`
	Header *string `json:"header,omitempty"`
	To string `json:"to"`
}

// NewStructsTemplateButtonPayload instantiates a new StructsTemplateButtonPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructsTemplateButtonPayload(buttons []StructsTemplateButton, to string) *StructsTemplateButtonPayload {
	this := StructsTemplateButtonPayload{}
	this.Buttons = buttons
	this.To = to
	return &this
}

// NewStructsTemplateButtonPayloadWithDefaults instantiates a new StructsTemplateButtonPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructsTemplateButtonPayloadWithDefaults() *StructsTemplateButtonPayload {
	this := StructsTemplateButtonPayload{}
	return &this
}

// GetButtons returns the Buttons field value
func (o *StructsTemplateButtonPayload) GetButtons() []StructsTemplateButton {
	if o == nil {
		var ret []StructsTemplateButton
		return ret
	}

	return o.Buttons
}

// GetButtonsOk returns a tuple with the Buttons field value
// and a boolean to check if the value has been set.
func (o *StructsTemplateButtonPayload) GetButtonsOk() ([]StructsTemplateButton, bool) {
	if o == nil {
    return nil, false
	}
	return o.Buttons, true
}

// SetButtons sets field value
func (o *StructsTemplateButtonPayload) SetButtons(v []StructsTemplateButton) {
	o.Buttons = v
}

// GetContentText returns the ContentText field value if set, zero value otherwise.
func (o *StructsTemplateButtonPayload) GetContentText() string {
	if o == nil || isNil(o.ContentText) {
		var ret string
		return ret
	}
	return *o.ContentText
}

// GetContentTextOk returns a tuple with the ContentText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsTemplateButtonPayload) GetContentTextOk() (*string, bool) {
	if o == nil || isNil(o.ContentText) {
    return nil, false
	}
	return o.ContentText, true
}

// HasContentText returns a boolean if a field has been set.
func (o *StructsTemplateButtonPayload) HasContentText() bool {
	if o != nil && !isNil(o.ContentText) {
		return true
	}

	return false
}

// SetContentText gets a reference to the given string and assigns it to the ContentText field.
func (o *StructsTemplateButtonPayload) SetContentText(v string) {
	o.ContentText = &v
}

// GetFooter returns the Footer field value if set, zero value otherwise.
func (o *StructsTemplateButtonPayload) GetFooter() string {
	if o == nil || isNil(o.Footer) {
		var ret string
		return ret
	}
	return *o.Footer
}

// GetFooterOk returns a tuple with the Footer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsTemplateButtonPayload) GetFooterOk() (*string, bool) {
	if o == nil || isNil(o.Footer) {
    return nil, false
	}
	return o.Footer, true
}

// HasFooter returns a boolean if a field has been set.
func (o *StructsTemplateButtonPayload) HasFooter() bool {
	if o != nil && !isNil(o.Footer) {
		return true
	}

	return false
}

// SetFooter gets a reference to the given string and assigns it to the Footer field.
func (o *StructsTemplateButtonPayload) SetFooter(v string) {
	o.Footer = &v
}

// GetHeader returns the Header field value if set, zero value otherwise.
func (o *StructsTemplateButtonPayload) GetHeader() string {
	if o == nil || isNil(o.Header) {
		var ret string
		return ret
	}
	return *o.Header
}

// GetHeaderOk returns a tuple with the Header field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructsTemplateButtonPayload) GetHeaderOk() (*string, bool) {
	if o == nil || isNil(o.Header) {
    return nil, false
	}
	return o.Header, true
}

// HasHeader returns a boolean if a field has been set.
func (o *StructsTemplateButtonPayload) HasHeader() bool {
	if o != nil && !isNil(o.Header) {
		return true
	}

	return false
}

// SetHeader gets a reference to the given string and assigns it to the Header field.
func (o *StructsTemplateButtonPayload) SetHeader(v string) {
	o.Header = &v
}

// GetTo returns the To field value
func (o *StructsTemplateButtonPayload) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *StructsTemplateButtonPayload) GetToOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *StructsTemplateButtonPayload) SetTo(v string) {
	o.To = v
}

func (o StructsTemplateButtonPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["buttons"] = o.Buttons
	}
	if !isNil(o.ContentText) {
		toSerialize["content_text"] = o.ContentText
	}
	if !isNil(o.Footer) {
		toSerialize["footer"] = o.Footer
	}
	if !isNil(o.Header) {
		toSerialize["header"] = o.Header
	}
	if true {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableStructsTemplateButtonPayload struct {
	value *StructsTemplateButtonPayload
	isSet bool
}

func (v NullableStructsTemplateButtonPayload) Get() *StructsTemplateButtonPayload {
	return v.value
}

func (v *NullableStructsTemplateButtonPayload) Set(val *StructsTemplateButtonPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableStructsTemplateButtonPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableStructsTemplateButtonPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructsTemplateButtonPayload(val *StructsTemplateButtonPayload) *NullableStructsTemplateButtonPayload {
	return &NullableStructsTemplateButtonPayload{value: val, isSet: true}
}

func (v NullableStructsTemplateButtonPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructsTemplateButtonPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


