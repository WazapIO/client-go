/*
WhatsAPI Go

The V2 of WhatsAPI Go

API version: 2.0
Contact: manjit@sponsorbook.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package WhatsAPI

import (
	"encoding/json"
)

// StructsUserInfoPayload struct for StructsUserInfoPayload
type StructsUserInfoPayload struct {
	UserIds []string `json:"user_ids"`
}

// NewStructsUserInfoPayload instantiates a new StructsUserInfoPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructsUserInfoPayload(userIds []string) *StructsUserInfoPayload {
	this := StructsUserInfoPayload{}
	this.UserIds = userIds
	return &this
}

// NewStructsUserInfoPayloadWithDefaults instantiates a new StructsUserInfoPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructsUserInfoPayloadWithDefaults() *StructsUserInfoPayload {
	this := StructsUserInfoPayload{}
	return &this
}

// GetUserIds returns the UserIds field value
func (o *StructsUserInfoPayload) GetUserIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value
// and a boolean to check if the value has been set.
func (o *StructsUserInfoPayload) GetUserIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.UserIds, true
}

// SetUserIds sets field value
func (o *StructsUserInfoPayload) SetUserIds(v []string) {
	o.UserIds = v
}

func (o StructsUserInfoPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user_ids"] = o.UserIds
	}
	return json.Marshal(toSerialize)
}

type NullableStructsUserInfoPayload struct {
	value *StructsUserInfoPayload
	isSet bool
}

func (v NullableStructsUserInfoPayload) Get() *StructsUserInfoPayload {
	return v.value
}

func (v *NullableStructsUserInfoPayload) Set(val *StructsUserInfoPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableStructsUserInfoPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableStructsUserInfoPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructsUserInfoPayload(val *StructsUserInfoPayload) *NullableStructsUserInfoPayload {
	return &NullableStructsUserInfoPayload{value: val, isSet: true}
}

func (v NullableStructsUserInfoPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructsUserInfoPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


