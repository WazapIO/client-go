/*
WhatsAPI Go

The V2 of WhatsAPI Go

API version: 2.0
Contact: manjit@sponsorbook.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package WhatsAPI

import (
	"encoding/json"
)

// TextMessage struct for TextMessage
type TextMessage struct {
	Text string `json:"text"`
	To string `json:"to"`
}

// NewTextMessage instantiates a new TextMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTextMessage(text string, to string) *TextMessage {
	this := TextMessage{}
	this.Text = text
	this.To = to
	return &this
}

// NewTextMessageWithDefaults instantiates a new TextMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTextMessageWithDefaults() *TextMessage {
	this := TextMessage{}
	return &this
}

// GetText returns the Text field value
func (o *TextMessage) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *TextMessage) GetTextOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *TextMessage) SetText(v string) {
	o.Text = v
}

// GetTo returns the To field value
func (o *TextMessage) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *TextMessage) GetToOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *TextMessage) SetTo(v string) {
	o.To = v
}

func (o TextMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["text"] = o.Text
	}
	if true {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableTextMessage struct {
	value *TextMessage
	isSet bool
}

func (v NullableTextMessage) Get() *TextMessage {
	return v.value
}

func (v *NullableTextMessage) Set(val *TextMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableTextMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableTextMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTextMessage(val *TextMessage) *NullableTextMessage {
	return &NullableTextMessage{value: val, isSet: true}
}

func (v NullableTextMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTextMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


