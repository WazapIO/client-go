/*
WhatsAPI Go

The V2 of WhatsAPI Go

API version: 2.0
Contact: manjit@sponsorbook.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package WhatsAPI

import (
	"encoding/json"
)

// UrlMediaUploadPayload struct for UrlMediaUploadPayload
type UrlMediaUploadPayload struct {
	Url *string `json:"url,omitempty"`
}

// NewUrlMediaUploadPayload instantiates a new UrlMediaUploadPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrlMediaUploadPayload() *UrlMediaUploadPayload {
	this := UrlMediaUploadPayload{}
	return &this
}

// NewUrlMediaUploadPayloadWithDefaults instantiates a new UrlMediaUploadPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrlMediaUploadPayloadWithDefaults() *UrlMediaUploadPayload {
	this := UrlMediaUploadPayload{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UrlMediaUploadPayload) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlMediaUploadPayload) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *UrlMediaUploadPayload) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UrlMediaUploadPayload) SetUrl(v string) {
	o.Url = &v
}

func (o UrlMediaUploadPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableUrlMediaUploadPayload struct {
	value *UrlMediaUploadPayload
	isSet bool
}

func (v NullableUrlMediaUploadPayload) Get() *UrlMediaUploadPayload {
	return v.value
}

func (v *NullableUrlMediaUploadPayload) Set(val *UrlMediaUploadPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUrlMediaUploadPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUrlMediaUploadPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrlMediaUploadPayload(val *UrlMediaUploadPayload) *NullableUrlMediaUploadPayload {
	return &NullableUrlMediaUploadPayload{value: val, isSet: true}
}

func (v NullableUrlMediaUploadPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrlMediaUploadPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


