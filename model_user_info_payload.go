/*
WhatsAPI Go

The V2 of WhatsAPI Go

API version: 2.0
Contact: manjit@sponsorbook.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package WhatsAPI

import (
	"encoding/json"
)

// UserInfoPayload struct for UserInfoPayload
type UserInfoPayload struct {
	UserIds []string `json:"user_ids"`
}

// NewUserInfoPayload instantiates a new UserInfoPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserInfoPayload(userIds []string) *UserInfoPayload {
	this := UserInfoPayload{}
	this.UserIds = userIds
	return &this
}

// NewUserInfoPayloadWithDefaults instantiates a new UserInfoPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserInfoPayloadWithDefaults() *UserInfoPayload {
	this := UserInfoPayload{}
	return &this
}

// GetUserIds returns the UserIds field value
func (o *UserInfoPayload) GetUserIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value
// and a boolean to check if the value has been set.
func (o *UserInfoPayload) GetUserIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.UserIds, true
}

// SetUserIds sets field value
func (o *UserInfoPayload) SetUserIds(v []string) {
	o.UserIds = v
}

func (o UserInfoPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user_ids"] = o.UserIds
	}
	return json.Marshal(toSerialize)
}

type NullableUserInfoPayload struct {
	value *UserInfoPayload
	isSet bool
}

func (v NullableUserInfoPayload) Get() *UserInfoPayload {
	return v.value
}

func (v *NullableUserInfoPayload) Set(val *UserInfoPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUserInfoPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUserInfoPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserInfoPayload(val *UserInfoPayload) *NullableUserInfoPayload {
	return &NullableUserInfoPayload{value: val, isSet: true}
}

func (v NullableUserInfoPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserInfoPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


